module base {

	genum AnimalCatg { FISH, BIRD, MAMMAL }

	gobject Animal [abstract] {
	
		properties {
		
			category {
				type = enumeration,
				gtype = gtypeof(AnimalCatg),
				access = read & write & init-only
			}
		
		}
	
	}

}
	
gobject Dog {

	inherits from base/Animal;
	
	public methods {
	
		Dog
			<- name: string [const];
		
	}
	
}
	
gobject Human [final] {
	
	inherits from base/Animal;
		
	properties {

		first-name {
			description = "first name",
			type = string,
			access = read & write & init-only
		}

		last-name {
			description = "last name",
			type = string,
			access = read & write & init-only
		}
		
		full-name {
			description = "full name",
			type = string,
			access = read
		}
			 
	}
		
	public methods {
		
		Human 
			category <- AnimalCatg.MAMMAL
			first-name <- first_name: string [const]
			<- last_name: string [const];
				
	}
		
}
